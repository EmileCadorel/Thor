import std::fs::path;
import krepusko::core::_;
import std::io;
import krepusko::interface::drawer;
import krepusko::math::vector;

class MyActivity over Activity {

    let _i : u32;
    let dmut _drawer : &WidgetDrawer;
    
    pub self (dmut app : &Application, i : u32) with
        super (alias app),
         _i = i,
         _drawer =  WidgetDrawer::new (app.getWindow ().getWidth (), app.getWindow ().getHeight ())
    {
        app:.getInputManager ():.connect (KeyInfo (SDLK_ESCAPE, KeyEvent::DOWN), &self:.quit);
    }


    pub over on2dDraw (mut self) {
        self._drawer.drawTriangle (vec2 (0.5f, 0.5f), 0.5f, vec3 (1.0f, 1.0f, 1.0f));
    }
    
    def quit (mut self, _ : KeyInfo) {
        println ("Quit ", self._i);
        self._app:.closeActivity ();
    }    
        
    impl Disposable {
        pub over dispose (mut self) {
            println ("Destroying : ", self._i);
        }
    }

}


def main () {
    with dmut app = Application::new (Path::new ("../resources/config/gl3.ini")) {
        app:.openActivity!{&MyActivity} (0u32);
        app:.run ();
    } catch {
        err : _ => {
            println (err);
        }
    }
}
