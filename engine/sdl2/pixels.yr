mod sdl2::pixels;
import sdl2::rect, sdl2::stdinc;


pub aka SDL_DEFINE_PIXELFOURCC{A : u8, B : u8, C : u8, D : u8} = SDL_FOURCC!{A, B, C, D}

pub aka SDL_DEFINE_PIXELFORMAT{type : u32, order : u32, layout : u32, bits : u32, bytes : u32} =
    ((1u32 << 28u32) | ((type) << 24u32) | ((order) << 20u32) | ((layout) << 16u32) | 
     ((bits) << 8u32) | ((bytes) << 0u32));



pub aka SDL_PIXELTYPE_UNKNOWN  = 0u32;
pub aka SDL_PIXELTYPE_INDEX1 = 1u32;
pub aka SDL_PIXELTYPE_INDEX4 = 2u32;
pub aka SDL_PIXELTYPE_INDEX8 = 3u32;
pub aka SDL_PIXELTYPE_PACKED8 = 4u32;
pub aka SDL_PIXELTYPE_PACKED16 = 5u32;
pub aka SDL_PIXELTYPE_PACKED32 = 6u32;
pub aka SDL_PIXELTYPE_ARRAYU8 = 7u32;
pub aka SDL_PIXELTYPE_ARRAYU16 = 8u32;
pub aka SDL_PIXELTYPE_ARRAYU32 = 9u32;
pub aka SDL_PIXELTYPE_ARRAYF16 = 10u32;
pub aka SDL_PIXELTYPE_ARRAYF32 = 12u32;

/** Bitmap pixel order, high bit -> low bit. */

pub aka SDL_BITMAPORDER_NONE = 0u32;
pub aka SDL_BITMAPORDER_4321 = 1u32;
pub aka SDL_BITMAPORDER_1234 = 2u32;


pub aka SDL_PACKEDORDER_NONE = 0u32;
pub aka SDL_PACKEDORDER_XRGB = 1u32;
pub aka SDL_PACKEDORDER_RGBX = 2u32;
pub aka SDL_PACKEDORDER_ARGB = 3u32;
pub aka SDL_PACKEDORDER_RGBA = 4u32;
pub aka SDL_PACKEDORDER_XBGR = 5u32;
pub aka SDL_PACKEDORDER_BGRX = 6u32;
pub aka SDL_PACKEDORDER_ABGR = 7u32;
pub aka SDL_PACKEDORDER_BGRA = 8u32;

/** Array component order, low byte -> high byte. */
/* !!! FIXME: in 2.1, make these not overlap differently with
!!! FIXME:  SDL_PACKEDORDER_*, so we can simplify SDL_ISPIXELFORMAT_ALPHA */
pub aka SDL_ARRAYORDER_NONE = 0u32;
pub aka SDL_ARRAYORDER_RGB = 1u32;
pub aka SDL_ARRAYORDER_RGBA = 2u32;
pub aka SDL_ARRAYORDER_ARGB = 3u32;
pub aka SDL_ARRAYORDER_BGR = 4u32;
pub aka SDL_ARRAYORDER_BGRA = 5u32;
pub aka SDL_ARRAYORDER_ABGR = 6u32;

/** Packed component layout. */
pub aka SDL_PACKEDLAYOUT_NONE = 0u32;
pub aka SDL_PACKEDLAYOUT_332 = 1u32;
pub aka SDL_PACKEDLAYOUT_4444 = 2u32;
pub aka SDL_PACKEDLAYOUT_1555 = 3u32;
pub aka SDL_PACKEDLAYOUT_5551 = 4u32;
pub aka SDL_PACKEDLAYOUT_565 = 5u32;
pub aka SDL_PACKEDLAYOUT_8888 = 6u32;
pub aka SDL_PACKEDLAYOUT_2101010 = 7u32;
pub aka SDL_PACKEDLAYOUT_1010102 = 8u32;




pub aka SDL_PIXELFORMAT_UNKNOWN = 0u32;
pub aka SDL_PIXELFORMAT_INDEX1LSB = SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_4321, 0u32, 1u32, 0u32};
pub aka SDL_PIXELFORMAT_INDEX1MSB =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_1234, 0u32,
                            1u32, 0u32};
pub aka SDL_PIXELFORMAT_INDEX4LSB =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_4321, 0u32,
                            4u32, 0u32};

pub aka SDL_PIXELFORMAT_INDEX4MSB =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_1234, 0u32,
                            4u32, 0u32};

pub aka SDL_PIXELFORMAT_INDEX8 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_INDEX8, 0u32, 0u32, 8u32, 1u32};

pub aka SDL_PIXELFORMAT_RGB332 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED8, SDL_PACKEDORDER_XRGB,
                            SDL_PACKEDLAYOUT_332, 8u32, 1u32};
pub aka SDL_PIXELFORMAT_RGB444 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB,
                            SDL_PACKEDLAYOUT_4444, 12u32, 2u32};

pub aka SDL_PIXELFORMAT_RGB555 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB,
                            SDL_PACKEDLAYOUT_1555, 15u32, 2u32};
pub aka SDL_PIXELFORMAT_BGR555 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR,
                            SDL_PACKEDLAYOUT_1555, 15u32, 2u32};
pub aka SDL_PIXELFORMAT_ARGB4444 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB,
                            SDL_PACKEDLAYOUT_4444, 16u32, 2u32};
pub aka SDL_PIXELFORMAT_RGBA4444 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA,
                            SDL_PACKEDLAYOUT_4444, 16u32, 2u32};
pub aka SDL_PIXELFORMAT_ABGR4444 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR,
                            SDL_PACKEDLAYOUT_4444, 16u32, 2u32};
pub aka SDL_PIXELFORMAT_BGRA4444 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA,
                            SDL_PACKEDLAYOUT_4444, 16u32, 2u32};

pub aka SDL_PIXELFORMAT_ARGB1555 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB,
                            SDL_PACKEDLAYOUT_1555, 16u32, 2u32};
pub aka SDL_PIXELFORMAT_RGBA5551 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA,
                            SDL_PACKEDLAYOUT_5551, 16u32, 2u32}
pub aka SDL_PIXELFORMAT_ABGR1555 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR,
                            SDL_PACKEDLAYOUT_1555, 16u32, 2u32}
pub aka SDL_PIXELFORMAT_BGRA5551 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA,
                            SDL_PACKEDLAYOUT_5551, 16u32, 2u32};
pub aka SDL_PIXELFORMAT_RGB565 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB,
                            SDL_PACKEDLAYOUT_565, 16u32, 2u32};
pub aka SDL_PIXELFORMAT_BGR565 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR,
                            SDL_PACKEDLAYOUT_565, 16u32, 2u32};
pub aka SDL_PIXELFORMAT_RGB24 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_RGB, 0u32,
                            24u32, 3u32};
pub aka SDL_PIXELFORMAT_BGR24 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_BGR, 0u32,
                            24u32, 3u32};
pub aka SDL_PIXELFORMAT_RGB888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XRGB,
                            SDL_PACKEDLAYOUT_8888, 24u32, 4u32};
pub aka SDL_PIXELFORMAT_RGBX8888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBX,
                            SDL_PACKEDLAYOUT_8888, 24u32, 4u32};
pub aka SDL_PIXELFORMAT_BGR888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XBGR,
                            SDL_PACKEDLAYOUT_8888, 24u32, 4u32};
pub aka SDL_PIXELFORMAT_BGRX8888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRX,
                            SDL_PACKEDLAYOUT_8888, 24u32, 4u32};
pub aka SDL_PIXELFORMAT_ARGB8888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB,
                            SDL_PACKEDLAYOUT_8888, 32u32, 4u32};
pub aka SDL_PIXELFORMAT_RGBA8888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBA,
                            SDL_PACKEDLAYOUT_8888, 32u32, 4u32};
pub aka SDL_PIXELFORMAT_ABGR8888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ABGR,
                            SDL_PACKEDLAYOUT_8888, 32u32, 4u32};
pub aka SDL_PIXELFORMAT_BGRA8888 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRA,
                            SDL_PACKEDLAYOUT_8888, 32u32, 4u32};

pub aka SDL_PIXELFORMAT_ARGB2101010 =
    SDL_DEFINE_PIXELFORMAT!{SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB,
                            SDL_PACKEDLAYOUT_2101010, 32u32, 4u32};

/* Aliases for RGBA byte arrays of color data, for the current platform */
// __version (BIG_ENDIAN) {
//     pub aka SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_RGBA8888;
//     pub aka SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_ARGB8888;
//     pub aka SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_BGRA8888;
//     pub aka SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_ABGR8888;
// } else {
    pub aka SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_ABGR8888;
    pub aka SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_BGRA8888;
    pub aka SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_ARGB8888;
    pub aka SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_RGBA8888;
//}

pub aka    SDL_PIXELFORMAT_YV12 =      /**< Planar mode: Y + V + U  (3 planes) */
    SDL_FOURCC!{89u8, 86u8, 49u8, 50u8};
pub aka SDL_PIXELFORMAT_IYUV =      /**< Planar mode: Y + U + V  (3 planes) */
    SDL_FOURCC!{73u8, 89u8, 85u8, 86u8};

pub aka SDL_PIXELFORMAT_YUY2 =      /**< Packed mode: Y0+U0+Y1+V0 (1 plane) */
    SDL_FOURCC!{89u8, 85u8, 86u8, 50u8};

pub aka SDL_PIXELFORMAT_UYVY =      /**< Packed mode: U0+Y0+V0+Y1 (1 plane) */
    SDL_FOURCC!{85u8, 89u8, 86u8, 89u8};

pub aka SDL_PIXELFORMAT_YVYU =      /**< Packed mode: Y0+V0+Y1+U0 (1 plane) */
    SDL_FOURCC!{89u8, 86u8, 89u8, 85u8};

pub aka SDL_PIXELFORMAT_NV12 =      /**< Planar mode: Y + U/V interleaved  (2 planes) */
    SDL_FOURCC!{78u8, 86u8, 49u8, 50u8};

pub aka SDL_PIXELFORMAT_NV21 =      /**< Planar mode: Y + V/U interleaved  (2 planes) */
    SDL_FOURCC!{78u8, 86u8, 50u8, 49u8};

pub aka SDL_PIXELFORMAT_EXTERNAL_OES =      /**< Android video texture format */
    SDL_FOURCC!{79u8, 69u8, 83u8, 32u8};

pub struct
| r : u8
| g : u8
| b : u8
| a : u8
-> SDL_Color;

pub struct 
| ncolors : i32
| colors : &SDL_Color
| version : u32
| refcount : i32
-> SDL_Palette;

/**
 *  \note Everything in the pixel format structure is read-only.
 */
pub struct 
| format : u32
| palette : &SDL_Palette
| BitsPerPixel : u8
| BytesPerPixel : u8
| padding : [u8 ; 2u32]
| Rmask : u32
| Gmask : u32
| Bmask : u32
| Amask : u32
| Rloss : u8
| Gloss : u8
| Bloss : u8
| Aloss : u8
| Rshift : u8
| Gshift : u8
| Bshift : u8
| Ashift : u8
| refcount : i32
| next : &SDL_PixelFormat
 -> SDL_PixelFormat;
